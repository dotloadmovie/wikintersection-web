{"version":3,"sources":["config/index.js","reducers/index.js","stores/Store.js","components/navigation/MainNavigation.component.jsx","components/navigation/MainNavigation.container.jsx","actionCreators/index.js","components/views/searchresult/SearchResultView.component.jsx","components/forms/checkbox/Checkbox.component.jsx","components/forms/checkbox/Checkbox.container.jsx","components/views/searchresult/SearchResultView.container.jsx","components/views/search/SearchView.component.jsx","components/views/search/SearchView.container.jsx","components/views/compare/CompareView.component.jsx","components/views/compare/CompareView.container.jsx","App.js","serviceWorker.js","index.js"],"names":["getURIBase","defaultState","search0","rowKey","value","search","results","serverRequestInFlight","search1","currView","compareResult","rootReducer","state","arguments","length","undefined","action","type","newState","Object","assign","view","searchBlock","searchIndex","row","status","searchResult","Data","store","createStore","reducer","applyMiddleware","thunk","MainNavigationComponent","react_default","a","createElement","menu","mode","theme","defaultSelectedKeys","style","lineHeight","Item","key","MainNavigationContainer","Component","searchLoading","compareLoading","SearchResultViewComponent","_ref","data","columns","table","dataSource","pagination","pageSize","CheckboxComponent","checkedState","events","es_radio","checked","onChange","handleChange","CheckboxContainer","evt","_this","props","this","SearchResultViewContainer","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setState","checkedValue","selectRow","index","_this2","map","item","i","count","title","dataIndex","render","Checkbox_container","SearchResultViewContainerConnected","connect","dispatch","SearchViewComponent","placeholder","searchValue","Search","Input","className","enterButton","size","onSearch","handleSearchClick","handleSearchValueInput","spin","SearchResultView_container","handleSelectRow","SearchViewContainer","searchValueInput","target","fetchSearchResult","concat","_this$props","SearchViewContainerConnected","url","fetch","then","response","ok","Error","statusText","json","searchSuccess","catch","searchError","CompareViewComponent","CompareViewContainer","CompareViewContainerConnected","App","handleClearSearch","changeView","clearSearch","handleSubmit","submitCompare","es_row","col","md","sm","marginBottom","SearchView_container","x","xs","es_button","onClick","textAlign","CompareView_container","renderSearch","renderCompare","Header","Layout","Content","Footer","layout","MainNavigation_container","padding","span","buildTitle","renderSubView","rel","href","AppConnected","compareResults","compareSuccess","compareError","Boolean","window","location","hostname","match","ReactDOM","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2f94c9f0.chunk.js","sourcesContent":["export const buildDefaultState = () => {\n    return {\n        search0: {rowKey: null, value: null, search: null, results: null, serverRequestInFlight: false},\n        search1: {rowKey: null, value: null, search: null, results: null, serverRequestInFlight: false},\n        currView: 'search',\n        compareResult: null,\n        serverRequestInFlight: false\n    }\n}\n\nexport const getURIBase = () => {\n    return 'http://localhost:1323'\n}","import {buildDefaultState} from \"../config\";\n\nconst defaultState = buildDefaultState();\n\nconst rootReducer = (state = defaultState, action) => {\n\n    if(action.type === 'CHANGE_VIEW') {\n        let newState = Object.assign({}, state);\n\n        newState.currView = action.view;\n\n        return newState;\n    }\n\n    if(action.type === 'CLEAR_SEARCH') {\n        let newState = Object.assign({}, defaultState);\n        return newState;\n    }\n\n    if(action.type === 'SEARCH_VALUE_INPUT') {\n        let newState = Object.assign({}, state);\n        //changing offset of the index. TODO: make this global\n\n        let searchBlock = Object.assign({}, newState['search' + action.searchIndex]);\n        searchBlock.value = action.value;\n        newState['search' + action.searchIndex] = searchBlock;\n\n        return newState;\n    }\n\n    if(action.type === 'SELECT_ROW') {\n        let newState = Object.assign({}, state);\n\n        let searchBlock = Object.assign({}, newState['search' + action.searchIndex]);\n        searchBlock.search = action.row.value;\n        newState['search' + action.searchIndex] = searchBlock\n\n        return newState;\n    }\n\n    if(action.type === 'SEARCH_LOADING') {\n        let newState = Object.assign({}, state);\n\n        let searchBlock = Object.assign({}, newState['search' + action.searchIndex]);\n        searchBlock.serverRequestInFlight = action.status;\n        newState['search' + action.searchIndex] = searchBlock;\n\n        return newState;\n    }\n\n    if(action.type === 'SEARCH_SUCCESS') {\n        let newState = Object.assign({}, state);\n        let searchBlock = Object.assign({}, newState['search' + action.searchIndex]);\n\n        searchBlock.results = action.searchResult.Data;\n\n        newState['search' + action.searchIndex] = searchBlock;\n        return newState;\n    }\n\n\n    if(action.type === 'COMPARE_LOADING') {\n        let newState = Object.assign({}, state);\n\n        newState.serverRequestInFlight = action.status;\n\n        return newState;\n    }\n\n    if(action.type === 'COMPARE_SUCCESS') {\n        let newState = Object.assign({}, state);\n\n        newState.compareResult = action.compareResult.Data;\n        return newState;\n    }\n\n\n    return state;\n}\n\nexport default rootReducer;","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducer from '../reducers';\nimport {buildDefaultState} from \"../config\";\n\nconst defaultState = buildDefaultState();\n\nconst store = createStore(reducer, defaultState, applyMiddleware(thunk));\n\nexport default store;\n","import React from 'react';\nimport {Menu} from 'antd';\n\nconst MainNavigationComponent = () => {\n    return (\n        <Menu mode=\"horizontal\" theme=\"dark\" defaultSelectedKeys={['1']} style={{lineHeight: \"64px\"}}>\n            <Menu.Item key=\"1\">Search</Menu.Item>\n            <Menu.Item key=\"2\">About</Menu.Item>\n        </Menu>\n    );\n}\n\nexport default MainNavigationComponent;","import {Component} from 'react';\n\nimport MainNavigationComponent from './MainNavigation.component'\n\n\nclass MainNavigationContainer extends Component {\n    render() {\n        return (MainNavigationComponent());\n    }\n}\n\nexport default MainNavigationContainer;","export const changeView = (view) => {\n    return {\n        type: 'CHANGE_VIEW',\n        view\n    }\n}\n\nexport const clearSearch = () => {\n    return {\n        type: 'CLEAR_SEARCH'\n    }\n}\n\n\nexport const searchValueInput = (value, searchIndex) => {\n    return {\n        type: 'SEARCH_VALUE_INPUT',\n        value,\n        searchIndex\n    }\n}\n\nexport const selectRow = (row, searchIndex) => {\n    return {\n        type: 'SELECT_ROW',\n        row,\n        searchIndex\n    }\n}\n\nexport const searchLoading = (status, searchIndex) => {\n    return {\n        type: 'SEARCH_LOADING',\n        status,\n        searchIndex\n    }\n}\n\nexport const searchSuccess = (searchResult, searchIndex) => {\n    return {\n        type: 'SEARCH_SUCCESS',\n        searchResult,\n        searchIndex\n    }\n}\n\nexport const searchError = (searchError) => {\n    return {\n        type: 'SEARCH_ERROR',\n        searchError\n    }\n}\n\nexport const fetchSearchResult = (url, searchIndex) => {\n    return (dispatch) => {\n        dispatch(searchLoading(true, searchIndex));\n\n        fetch(url)\n            .then((response) => {\n                if (!response.ok) {\n                    throw Error(response.statusText);\n                }\n\n                dispatch(searchLoading(false, searchIndex));\n\n                return response;\n            })\n            .then((response) => response.json())\n            .then((searchResult) => dispatch(searchSuccess(searchResult, searchIndex)))\n            .catch(() => dispatch(searchError(true)));\n    };\n}\n\n\n\n\n\nexport const compareLoading = (status) => {\n    return {\n        type: 'COMPARE_LOADING',\n        status,\n    }\n}\n\nexport const compareSuccess = (compareResult) => {\n    return {\n        type: 'COMPARE_SUCCESS',\n        compareResult\n    }\n}\n\nexport const compareError = (compareError) => {\n    return {\n        type: 'SEARCH_ERROR',\n        compareError\n    }\n}\n\nexport const submitCompare = (url) => {\n    return (dispatch) => {\n        dispatch(compareLoading(true));\n\n        fetch(url)\n            .then((response) => {\n                if (!response.ok) {\n                    throw Error(response.statusText);\n                }\n\n                dispatch(compareLoading(false));\n\n                return response;\n            })\n            .then((response) => response.json())\n            .then((compareResult) => dispatch(compareSuccess(compareResult)))\n            .catch(() => dispatch(compareError(true)));\n    };\n}","import React from 'react'\nimport {Table} from 'antd'\n\nconst SearchResultViewComponent = ({data, columns}) => {\n\n    return (\n        <div>\n            <Table columns={columns} dataSource={data} pagination={{ pageSize: 10 }} />\n        </div>\n    );\n}\n\nexport default SearchResultViewComponent;","import React from 'react';\n\nimport {Radio} from 'antd';\n\nconst CheckboxComponent = ({checkedState, events}) => {\n    return (\n        <Radio checked={checkedState} onChange={events.handleChange} />\n    );\n}\n\nexport default CheckboxComponent;","import {Component} from 'react';\nimport CheckboxComponent from \"./Checkbox.component\";\n\nclass CheckboxContainer extends Component {\n\n    handleChange = (evt) => {\n        this.props.handleChange(this.props.row)\n    }\n\n    render() {\n        const events = {\n            handleChange: this.handleChange\n        }\n\n        const {checkedState} = this.props\n\n        return CheckboxComponent({events, checkedState});\n    }\n}\n\nexport default CheckboxContainer;","import React, {Component} from 'react'\nimport {connect} from 'react-redux';\n\nimport SearchResultViewComponent from './SearchResultView.component'\nimport CheckboxContainer from '../../forms/checkbox/Checkbox.container'\nimport {selectRow} from \"../../../actionCreators\";\n\nconst mapStateToProps = (state) => {\n    return {\n        currView: state.currView,\n        search0: state.search0,\n        search1: state.search1\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        selectRow: (row, searchIndex) => {\n            return dispatch(selectRow(row, searchIndex))\n        }\n    }\n}\n\nclass SearchResultViewContainer extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            checkedValue: null,\n        }\n    }\n\n    handleChange = (row) => {\n        this.setState({\n            checkedValue: row.key\n        })\n\n        this.props.selectRow(row, this.props.index)\n    }\n\n    render() {\n        const data = this.props.results.map((item, i) => {\n            return {\n                count: i + 1,\n                value: item,\n                key: i\n            }\n        });\n        const columns = [{\n            title: '#',\n            dataIndex: 'count',\n            key: 'count',\n            render: (item, row) => {\n                return (<CheckboxContainer handleChange={this.handleChange} row={row} checkedState={this.state.checkedValue === row.key} />)\n            }\n        }, {\n            title: 'Article',\n            dataIndex: 'value',\n            key: 'value'\n        }];\n\n        return (\n            SearchResultViewComponent({columns, data})\n        );\n    }\n}\n\nconst SearchResultViewContainerConnected = connect(mapStateToProps, mapDispatchToProps)(SearchResultViewContainer)\n\nexport default SearchResultViewContainerConnected;","import React from 'react'\nimport {Input, Spin} from 'antd'\nimport SearchResultViewContainer from \"../searchresult/SearchResultView.container\";\n\nconst SearchViewComponent = ({events, results, index, placeholder, searchValue, serverRequestInFlight}) => {\n    const Search = Input.Search;\n\n    return (\n        <div className=\"search-container\">\n            <Search\n                value={searchValue}\n                placeholder={placeholder}\n                enterButton=\"Search\"\n                size=\"large\"\n                onSearch={events.handleSearchClick}\n                onChange={events.handleSearchValueInput}\n            />\n            {serverRequestInFlight &&\n            <div className=\"spin-position\">\n                <Spin />\n            </div>\n            }\n            {results && !serverRequestInFlight &&\n            <SearchResultViewContainer\n                results={results}\n                index={index}\n                handleSelectRow={events.handleSelectRow}\n            />\n            }\n        </div>\n    );\n}\n\nexport default SearchViewComponent;","import {Component} from 'react';\nimport {connect} from \"react-redux\";\n\nimport {fetchSearchResult, searchValueInput} from '../../../actionCreators/'\nimport {getURIBase} from \"../../../config\";\n\nimport SearchViewComponent from './SearchView.component';\nimport \"./SearchView.css\";\n\n\nconst mapStateToProps = (state) => {\n    return {\n        currView: state.currView,\n        search0: state.search0,\n        search1: state.search1\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        fetchSearchResult: (url, searchIndex) => {\n            return dispatch(fetchSearchResult(url, searchIndex))\n        },\n        searchValueInput: (value, searchIndex) => {\n            return dispatch(searchValueInput(value, searchIndex))\n        }\n    }\n}\n\n\nclass SearchViewContainer extends Component {\n\n    handleSearchValueInput = (evt) => {\n        this.props.searchValueInput(evt.target.value, this.props.index);\n    }\n\n    handleSearchClick = (value) => {\n        this.props.fetchSearchResult(`${getURIBase()}/search/${value}`, this.props.index);\n    }\n\n    render() {\n        const events = {\n            handleSearchClick: this.handleSearchClick,\n            handleSearchValueInput: this.handleSearchValueInput\n        };\n\n        const {index, placeholder} = this.props;\n\n        const serverRequestInFlight = this.props['search' + index].serverRequestInFlight;\n        const searchValue = this.props['search' + index].value;\n        const results = this.props['search' + index].results;\n\n\n        return (\n           SearchViewComponent({\n               events,\n               results,\n               index,\n               placeholder,\n               searchValue,\n               serverRequestInFlight\n           })\n        );\n    }\n}\n\n\n\nconst SearchViewContainerConnected = connect(mapStateToProps, mapDispatchToProps)(SearchViewContainer)\n\nexport default SearchViewContainerConnected;","import React from 'react';\n\nimport {Table} from 'antd'\n\nconst CompareViewComponent = ({columns, data}) => {\n    return (\n        <div>\n            <Table columns={columns} dataSource={data} pagination={{ pageSize: 100 }} />\n        </div>\n    );\n}\n\nexport default CompareViewComponent;","import {Component} from 'react'\nimport {connect} from \"react-redux\";\n\nimport CompareViewComponent from \"./CompareView.component\";\n\nconst mapStateToProps = (state) => {\n    return {\n        results: state.compareResult\n    }\n}\n\nclass CompareViewContainer extends Component {\n    render() {\n\n        if(!this.props.results) {\n            return null\n        }\n\n        const data = this.props.results.map((item, i) => {\n            return {\n                count: i + 1,\n                value: item,\n                key: i\n            }\n        });\n        const columns = [{\n            title: '#',\n            dataIndex: 'count',\n            key: 'count',\n        }, {\n            title: 'Article',\n            dataIndex: 'value',\n            key: 'value'\n        }];\n\n        return CompareViewComponent({\n            data,\n            columns\n        })\n    }\n}\n\nconst CompareViewContainerConnected = connect(mapStateToProps)(CompareViewContainer)\n\nexport default CompareViewContainerConnected;","import React, {Component} from 'react';\nimport {Layout, Row, Col, Button, Spin} from 'antd';\nimport {connect} from 'react-redux';\n\nimport MainNavigationContainer from './components/navigation/MainNavigation.container';\nimport SearchViewContainerConnected from './components/views/search/SearchView.container';\nimport CompareViewContainerConnected from './components/views/compare/CompareView.container';\nimport './App.css';\n\nimport {clearSearch, submitCompare, changeView} from './actionCreators';\nimport {getURIBase} from \"./config\";\n\n\nconst mapStateToProps = (state) => {\n    return {\n        currView: state.currView,\n        serverRequestInFlight: state.serverRequestInFlight,\n        search0: state.search0,\n        search1: state.search1,\n        compareResults: state.compareResults\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        clearSearch: () => {\n            return dispatch(clearSearch())\n        },\n\n        submitCompare: (search0, search1) => {\n            return dispatch(submitCompare(`${getURIBase()}/compare/${search0}/${search1}`))\n        },\n\n        changeView: (view) => {\n            return dispatch(changeView(view));\n        }\n    }\n}\n\nclass App extends Component {\n\n    handleClearSearch = () => {\n       this.props.changeView('search');\n       this.props.clearSearch();\n    }\n\n    handleSubmit = () => {\n       this.props.changeView('compare');\n       this.props.submitCompare(this.props.search0.search, this.props.search1.search);\n    }\n\n    buildTitle() {\n        return (this.props.currView === 'search')? 'Search' : 'Results'\n    }\n\n    renderSearch() {\n        return (\n            <div>\n                <Row>\n                    <Col md={11} sm={24} style={{marginBottom: '24px'}}>\n                        {this.props.currView === 'search' &&\n                        <SearchViewContainerConnected\n                            index={0}\n                            placeholder=\"Search for a first Wikipedia entry\"x\n                        />\n                        }\n                    </Col>\n\n                    <Col md={2} sm={24} />\n                    <Col md={11} sm={24} style={{marginBottom: '24px'}}>\n                        {this.props.currView === 'search' &&\n                        <SearchViewContainerConnected\n                            index={1}\n                            placeholder=\"Search for a second Wikipedia entry\"\n                        />\n                        }\n                    </Col>\n                </Row>\n\n                <Row>\n                    <Col md={12} sm={6} xs={12}>\n                        {(this.props.search0.results || this.props.search1.results) &&\n                            <Button onClick={this.handleClearSearch}>Clear</Button>\n                        }\n                    </Col>\n\n                    <Col md={12} sm={12} xs={12} style={{textAlign:'right'}}>\n                        {(this.props.search0.search && this.props.search1.search) &&\n                        <Button type=\"primary\" onClick={this.handleSubmit}>Submit</Button>\n                        }\n                    </Col>\n                </Row>\n\n            </div>\n        );\n    }\n\n    renderCompare() {\n\n        if(this.props.serverRequestInFlight) {\n            return (\n                <div className=\"spin-position\">\n                    <Spin />\n                </div>\n            );\n        }\n\n        return (\n            <div>\n                <Row>\n                    <Col md={6} sm={24} style={{marginBottom: '24px'}}>\n\n                    </Col>\n\n                    <Col md={12} sm={24}>\n                        <CompareViewContainerConnected />\n                    </Col>\n                    <Col md={6} sm={24} style={{marginBottom: '24px'}}>\n\n                    </Col>\n                </Row>\n\n                <Row>\n                    <Col md={12} sm={6} xs={12}>\n                        <Button onClick={this.handleClearSearch}>Clear</Button>\n                    </Col>\n\n                </Row>\n\n            </div>\n        );\n    }\n\n    renderSubView() {\n        if(this.props.currView === 'search') {\n            return this.renderSearch();\n        }\n\n        if(this.props.currView === 'compare') {\n            return this.renderCompare();\n        }\n    }\n\n    render() {\n        const {Header, Content, Footer} = Layout;\n        const {currView} = this.props;\n\n        return (\n            <Layout>\n                <Header>\n                    <MainNavigationContainer currView={currView}/>\n                </Header>\n                <Content style={{padding: '0 50px'}}>\n                    <div className=\"main-content\">\n                        <div>\n                            <Row>\n                                <Col span={12}>\n                                    <h1>{this.buildTitle()}</h1>\n                                </Col>\n                            </Row>\n                        </div>\n                        {this.renderSubView()}\n                    </div>\n                </Content>\n\n                <Footer style={{textAlign: 'left'}}><a rel=\"noopener noreferrer\" target=\"_blank\" href={'http://www.github.com/dotloadmovie/wikintersection-web'}>Source</a></Footer>\n            </Layout>\n        );\n    }\n}\n\nconst AppConnected = connect(mapStateToProps, mapDispatchToProps)(App)\n\nexport default AppConnected;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\n\nimport store from './stores/Store';\nimport './index.css';\nimport 'antd/dist/antd.css';\nimport AppConnected from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Provider store={store}>\n        <AppConnected />\n    </Provider>,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}